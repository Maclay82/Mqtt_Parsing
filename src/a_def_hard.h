#ifndef A_DEF_HARD_H
#define A_DEF_HARD_H

// ****************** ПРОФИЛИ УСТРОЙСТВ *******************

// ВНИМАНИЕ!!! 

// Для плат Wemos D1 mini / Wemos D1 pro в настройках компиляции выбирайте "NodeMCU 1.0(ESP-12E Module)"
// --------------------------------------------------------
// При использовании платы микроконтроллера Wemos D1 (xxxx) и выбранной в менеджере плат "Wemos D1 (xxxx)"
// прошивка скорее всего нормально работать не будет. 
// Наблюдались следующие сбои у разных пользователей:
// - нестабильная работа WiFi (постоянные отваливания и пропадание сети) - попробуйте варианты с разным значением параметров компиляции IwIP в Arduino IDE
// - прекращение вывода контрольной информации в Serial.print()
// - настройки в EEPROM не сохраняются
// Думаю все эти проблемы из-за некорректной работы ядра ESP8266 для платы (варианта компиляции) Wemos D1 (xxxx) в версии ядра ESP8266
// --------------------------------------------------------
//
// Если вы собираетесь испорльзовать возможность сохранения нарисованных в WiFiPlayer картинок в файловой системе микроконтроллера,
// в меню "Инструменты" Arduino IDE в настройке распределения памяти устройства выберите вариант:
//   Для микроконтроллеров ESP8266 с 4МБ флэш-памяти рекомендуется вариант "Flash Size: 4MB(FS:2MB OTA:~1019KB)"
//   Для микроконтроллеров ESP32   с 4МБ флэш-памяти рекомендуется вариант "Partition scheme: Default 4MB with spiff(1.2MB APP/1.5MB SPIFFS)"; 
// Также для ESP32 требуется дополнительно установить библиотеку 'LittleFS_esp32'
//
// --------------------------------------------------------
//
// Текущая версия ядра ESP32 не видит SD-карты более 4GB
//
// --------------------------------------------------------
//
// Ниже в этом файле размещены профили устройств, реально существующие в природе, 
// которые поддерживаются автром - прошивка в них периодически обновлется по мере развития проекта.
//
// Вам не нужно ориентироваться на устройства, имеющиеся у автора - вы должны определить параметры для ВАШЕГО собственного устройства,
// с ВАШИМ набором оборудования (или отсутстивем оного), набором возможностей, размером матирицы и параметрами подключения к ней. 
//
// В вашем проекте на ESP8266 рекомендуется использовать DEVICE_ID 0 и в этом профиле указать параметры ВАШЕГО проекта в блоке #if (DEVICE_ID == 0) ... #endif
// Если вы используете микроконтроллер ESP32 - используйте DEVICE_ID 0 и определяйте параметры ВАШЕГО проекта в блоке строк 383-413 внутри #if defined(ESP32) ... #endif
//
// --------------------------------------------------------

// Профиль устройства, под которое выполняется компиляция и сборка проекта
#define HOST_NAME   F("WiFiPanel")
#define DEVICE_ID   3//0               // 0 - тестовый стенд
                                    // 1 - часы на кухне
                                    // 2 - часы на столе
                                    // 3 - панель на стене
                                    // 4 - гирлянда на балконе
                                    // 5 - часы у Даши
                                    // 6 - часы в фоторамке

// ================== Тестовый стенд =====================

#if (DEVICE_ID == 0)
/*
 * Wemos D1 mini
 * Физическое подключение:
 * Матрица зигзаг, левый верхний угол, направление вниз
 * Пин ленты    - D2
 * Пин кнопки   - D4
 * 
 * В менеджере плат выбрано NodeMCU v1.0 (ESP-12E)
 */
#if defined(ESP8266)
#define BUTTON_TYPE 1         // Тип кнопки: 0 - сенсорная (touch button); 1 - обычная кнопка на замыкание при нажатии (или если кнопки нет вообще)  
#define USE_MQTT 0            // 1 - использовать управление по MQTT-каналу; 0 - не использовать 

#define A_DEF_PASS 1          // 1 - Настройки MQTT и API KEY OpenWeatherMap в отдельном файле a_def_pass.h     (пароли и ключи доступа как приватные данные в отдельном файле)
                              // 0 - Настройки MQTT и API KEY OpenWeatherMap в скетче в a_def_soft.h в строках: (пароли и ключи доступа определены в тексте скетча)
                              //   324 - DEFAULT_MQTT_SERVER // Требуется если в a_def_hard.h ваша настройка USE_MQTT == 1
                              //   328 - DEFAULT_MQTT_USER   // Требуется если в a_def_hard.h ваша настройка USE_MQTT == 1
                              //   332 - DEFAULT_MQTT_PASS   // Требуется если в a_def_hard.h ваша настройка USE_MQTT == 1
                              //   336 - DEFAULT_MQTT_PORT   // Требуется если в a_def_hard.h ваша настройка USE_MQTT == 1
                              //   340 - DEFAULT_MQTT_PREFIX // Требуется если в a_def_hard.h ваша настройка USE_MQTT == 1
                              //   344 - MQTT_SEND_DELAY     // Требуется если в a_def_hard.h ваша настройка USE_MQTT == 1
                              // Файл a_def_pass.h в комплект не входит, нужно создать, скопировать туда указанные строки

#define PIN_BTN D4            // кнопка подключена сюда (D4 --- КНОПКА --- GND)
#endif
#endif

// =================== Часы на кухне ====================

#if (DEVICE_ID == 1)
/*
 * Wemos D1 mini
 * Физическое подключение:
 * Матрица зигзаг, правый нижний угол, направление вверх
 * Пин ленты    - D3
 * Пин кнопки   - D2
 * MP3Player    - не подключен
 * TM1637       - не подключен
 * В менеджере плат выбрано NodeMCU v1.0 (ESP-12E)
 */ 
#if defined(ESP8266)
#define BUTTON_TYPE 1         // Тип кнопки: 0 - сенсорная (touch button); 1 - обычная кнопка на замыкание при нажатии (или если кнопки нет вообще)  
#define USE_MQTT 0            // 1 - использовать управление по MQTT-каналу; 0 - не использовать 

#define A_DEF_PASS 1          // 1 - Настройки MQTT и API KEY OpenWeatherMap в отдельном файле a_def_pass.h
                              // 0 - Настройки MQTT и API KEY OpenWeatherMap в скетче в a_def_soft.h в строках:
                              // Смотри комментарий к блоку DEVICE_ID == 0

#define PIN_BTN 4             // кнопка подключена сюда (PIN --- КНОПКА --- GND)
#endif
#endif

// =================== Часы на столе ====================

#if (DEVICE_ID == 2)
/*
 * NodeMCU v1.0 (ESP-12E)
 * Физическое подключение:
 * Матрица зигзаг, левый нижний угол, направление вправо
 * Пин ленты    - D2
 * Пин кнопки   - D6
 * MP3Player    - D3 к RX, D4 к TX плеера 
 * TM1637       - не подключен
 * В менеджере плат выбрано NodeMCU v1.0 (ESP-12E)
 */ 
#if defined(ESP8266)
#define BUTTON_TYPE 1         // Тип кнопки: 0 - сенсорная (touch button); 1 - обычная кнопка на замыкание при нажатии (или если кнопки нет вообще)  
#define USE_MQTT 0            // 1 - использовать управление по MQTT-каналу; 0 - не использовать 

#define A_DEF_PASS 1          // 1 - Настройки MQTT и API KEY OpenWeatherMap в отдельном файле a_def_pass.h
                              // 0 - Настройки MQTT и API KEY OpenWeatherMap в скетче в a_def_soft.h в строках:
                              // Смотри комментарий к блоку DEVICE_ID == 0

#define PIN_BTN D6            // кнопка подключена сюда (PIN --- КНОПКА --- GND)

#endif
#endif

// ============= Панель на стене ====================

#if (DEVICE_ID == 3)
/*
 * Wemos D1 mini
 * Физическое подключение:
 * Матрица зигзаг, левый нижний угол, направление вправо
 * Пин ленты    - D2
 * Пин кнопки   - D4
 * В менеджере плат выбрано NodeMCU v1.0 (ESP-12E)
 */ 
#if defined(ESP8266)
#define BUTTON_TYPE 1         // Тип кнопки: 0 - сенсорная (touch button); 1 - обычная кнопка на замыкание при нажатии (или если кнопки нет вообще)  
#define MATRIX_TYPE 0         // тип матрицы: 0 - зигзаг, 1 - параллельная
#define USE_MQTT 1            // 1 - использовать управление по MQTT-каналу; 0 - не использовать 

#define A_DEF_PASS 0          // 1 - Настройки MQTT и API KEY OpenWeatherMap в отдельном файле a_def_pass.h
                              // 0 - Настройки MQTT и API KEY OpenWeatherMap в скетче в a_def_soft.h в строках:
                              // Смотри комментарий к блоку DEVICE_ID == 0

#define PIN_BTN 4            // кнопка подключена сюда (D4 --- КНОПКА --- GND)
#endif
#endif

// =======================================================

/*
 * NodeMCU ESP32
 * Физическое подключение:
 * Матрица зигзаг, левый нижний угол, направление вапрво
 * Пин ленты    - 13
 * Пин кнопки   - 15
 * MP3Player    - 17 к RX, 16 к TX плеера 
 * TM1637       - 33 к DIO, 32 к CLK
 * SD-карта     - 5 - CS, 18 (CLK), 19 (MISO), 23 (MOSI)  - у SD-card wemos d1 shield - D8 (CS), D5 (CLK), D6 (MISO), D7 (MOSI)
 * В менеджере плат выбрано "ESP32 Dev Module"
 */ 
#if defined(ESP32)
#define BUTTON_TYPE 1         // Тип кнопки: 0 - сенсорная (touch button); 1 - обычная кнопка на замыкание при нажатии (или если кнопки нет вообще)  
#define USE_MQTT 0            // 1 - использовать управление по MQTT-каналу; 0 - не использовать 

#define A_DEF_PASS 1          // 1 - Настройки MQTT и API KEY OpenWeatherMap в отдельном файле a_def_pass.h
                              // 0 - Настройки MQTT и API KEY OpenWeatherMap в скетче в a_def_soft.h в строках:
                              // Смотри комментарий к блоку DEVICE_ID == 0

// Схема подключения для ESP32 - в папке Schemes, файл 'ESP32+ALL.JPG'
 
#define PIN_BTN (15U)         // кнопка подключена сюда (PIN --- КНОПКА --- GND)

#endif

// =======================================================

// ************** ИСПОЛЬЗУЕМЫЕ БИБЛИОТЕКИ ****************

#if defined(ESP8266)
  #include <ESP8266WiFi.h>
  #include <ESP8266mDNS.h>
#endif

#if defined(ESP32)
  #include <ESPmDNS.h>
#endif

#if (USE_MQTT == 1)
#include <PubSubClient.h>        // Библиотека для работы с MQTT
#endif

#include <ArduinoOTA.h>          // Библиотека обновления "по воздуху"
#include <WiFiUdp.h>             // Библиотека поддержки WiFi
#include <TimeLib.h>             // Библиотека поддержки функций времени
#include <EEPROM.h>              // Библиотека поддержки постоянной памяти
#include <ArduinoJson.h>         // Библиотека для работы с JSON (погода, mqtt, состояние системы)

#include "timerMinim.h"          // Библиотека таймеров
#include "GyverButton.h"         // Библиотека поддержки кнопок

#include "FS.h"                  // Работа с внутренней файловой системой чипа ESP8266/ESP32
#if defined(ESP32)
  #define   LittleFS LITTLEFS
  #include <LITTLEFS.h>
#else
  #include <LittleFS.h>
#endif

// =======================================================

#if A_DEF_PASS == 1         
#include "a_def_pass.h"     // Если здесь ошибка - смотри комментарий к определению A_DEF_PASS выше в блоке с соответствующим DEVICE_ID
#endif
#endif